#!/usr/bin/env bash
# netj's bash module: j
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2000-10-31

bash_autoload=true

bash_login() {
    ## netj's abreviations
    j() {
        if [ $# -eq 0 ]; then
            jobs
            return
        fi 
        local key=$1; shift 1
        local ret=127 telnet= ssh= rsh= cmd=
        case $key in
            # Screen vocabularies
            sl) cmd="screen_list" ;;
            so) cmd="screen_only" ;;
            ss) cmd="screen_select $@" ;;
            sw) cmd="screen -wipe $@" ;;
            sx) cmd="screen -S $screen_name -xR $@" ;;
            sR) cmd="screen -S $screen_name -R $@" ;;
            sr) cmd="screen -r $@" ;;

            ## Frequently Used Hosts
            # Mazic Network
            a)  ssh=sab.mazic.org ;;
            j)  ssh=jib.mazic.org ;;
            m)  ssh=miju.mazic.org ;;
            h)  ssh=shins.mazic.org ;;

            # SPARCS
            s)  ssh=sparcs.org ;;
            S)  ssh=ska2.org ;;
            A)  ssh=ara.kaist.ac.kr ;;
            f)  ssh=ftp.kaist.ac.kr ;;
            G)  ssh=gurum.kaist.ac.kr ;;
            n)  ssh=news.kaist.ac.kr ;;
            nh) ssh=news-hub.kaist.ac.kr ;;

            # ROPAS
            r)  ssh=ropas.snu.ac.kr ;;

            # Otherwise, croak error
            *)  echo j: no map for $key >&2 ;;
        esac
        if [ -n "$telnet" ]; then cmd="telnet $telnet $@"
        elif [ -n "$ssh" ]; then cmd="ssh $LOGNAME@$ssh $@"
        elif [ -n "$rsh" ]; then cmd="rsh $rsh $@"
        fi
        if [ -n "$cmd" ]; then echo j: $cmd >&2; eval $cmd
        else return $ret
        fi
    }

    for_each_hosts() {
        local host=
        _known_hosts
        for host in "${COMPREPLY[@]}"; do
            [ "$HOSTNAME" != "$host" ] || continue
            "$@" $host
        done
    }

    propagate() {
        local args=
        args=("$@")
        if [ $# -gt 0 ]; then
            propagator() {
                local host=$1
                echo ============= $host ==============
                rsync -aRv "${args[@]}" $host:
            }
            for_each_hosts propagator
            unset propagator
        fi
    }
}

# vim:et:ts=8:sw=4:sts=4
