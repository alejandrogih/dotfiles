#!/usr/bin/env bash
# netj's bash module vocabularies
# Author: Jaeho Shin <netj@sparcs.org>
# Created: 2011-12-24

# registering handlers
PROMPT_COMMAND=""
bash_unload_command=""
trap 'eval $bash_unload_command' EXIT
bash_add_unloader() {
    bash_unload_command="$bash_unload_command$1;"
}
bash_insert_prompt() {
    PROMPT_COMMAND="$1;$PROMPT_COMMAND"
}
bash_add_prompt() {
    PROMPT_COMMAND="$PROMPT_COMMAND$1;"
}


# bash_add_path will avoid duplicate paths ending up in the variable
#  Usage: bash_add_path PATH /usr/local/bin
bash_add_path() {
    local v=$1; shift
    local p=
    for p in "$@"; do
        [[ -d "$p" ]] || continue
        if [[ -n "${!v}" ]]; then
            ! [[ "${!v}" =~ :$p:|^$p(:|$)|:$p$ ]] || continue
            export $v="${!v}:$p"
        else
            export $v="$p"
        fi
    done
}
# bash_insert_path will avoid duplicate paths ending up in the variable
#  Usage: bash_insert_path PATH /usr/local/bin
bash_insert_path() {
    local v=$1; shift
    local p=
    for p in "$@"; do
        [[ -d "$p" ]] || continue
        if [[ -n "${!v}" ]]; then
            ! [[ "${!v}" =~ :$p:|^$p(:|$)|:$p$ ]] || continue
            export $v="$p:${!v}"
        else
            export $v="$p"
        fi
    done
}
